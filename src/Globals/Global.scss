/** Colors */
$colorMain: #248FD8;
$colorGray: #e2e2e2;
$colorRed: #ee5f50;
$colorGreen: #19a54f;
$colorText: #000000;
$colorDark: #3E3E42;

@function getTextColor($color) {
    @if (lightness($color) > 50) {
        @return #000000; // Lighter backgorund, return dark color
    } @else {
        @return #ffffff; // Darker background, return light color
    }
}

/** Responsive */

$break-small: 768px;
$break-medium: 992px;
$break-large: 1280px;

@mixin respond-to($media) {
    @if $media == xs {
        @media only screen and (max-width: $break-small - 1) { @content; }
    }
    @else if $media == s {
        @media only screen and (min-width: $break-small) and (max-width: $break-medium - 1) { @content; }
    }
    @else if $media == m {
        @media only screen and (min-width: $break-medium) and (max-width: $break-large - 1) { @content; }
    }
    @else if $media == l {
        @media only screen and (min-width: $break-large) { @content; }
    }
}

/** Header */
$headerHeight: 50px;
$headerHeightSmall: 50px;

@mixin headerHeight() {
    @include respond-to(xs) { height: $headerHeightSmall; }
    @include respond-to(s) { height: $headerHeightSmall; }
    @include respond-to(m) { height: $headerHeight; }
    @include respond-to(l) { height: $headerHeight; }
}

/** Header */

$sideBarWidth: 320px;
$sideBarWidthSmall: 220px;


/** Layout */

@mixin ScrollContent {
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
}
:local(.ScrollContent) {
    @include ScrollContent;
}

:local(.Spacer) {
    clear: both;
    display: block;
}

/** Form */
:local(.SubmitButton) {
    background: $colorGreen;
    border-color: $colorGreen;
    color: #ffffff;

    &:focus,
    &:hover {
        background: darken($colorGreen, 10%);
        border-color: darken($colorGreen, 10%);
    }
}

:local(.InlineButton) {
    background: transparent;
    padding: 0px;
    margin: 0px;
    display: inline-block;
    border: 0px;
    color: $colorMain;

    &:focus,
    &:hover {
        text-decoration: underline;
    }
}

:local(.ErrorMessage) {
    color: $colorRed;
}